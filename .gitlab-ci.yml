stages:
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE/real-estate-server
  DASHBOARD_IMAGE: $CI_REGISTRY_IMAGE/real-estate-dashboard

build_server:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd real-estate-server
    - docker build -t $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA $CONTAINER_IMAGE:latest
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CONTAINER_IMAGE:latest

build_dashboard:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - cd real-estate-dashboard
  script:
    - docker build -t $DASHBOARD_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker tag $DASHBOARD_IMAGE:$CI_COMMIT_SHORT_SHA $DASHBOARD_IMAGE:latest
    - docker push $DASHBOARD_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $DASHBOARD_IMAGE:latest

# deploy:
#   stage: deploy
#   image: alpine:latest
#   before_script:
#     - apk add --no-cache bash curl jq
#     - echo "$KUBE_CONFIG" | base64 -d > $KUBECONFIG
#   script:
#     - kubectl --kubeconfig=$KUBECONFIG apply -f kubernetes/deployment.yaml
#     - kubectl --kubeconfig=$KUBECONFIG apply -f kubernetes/service.yaml
#   only:
#     - main
