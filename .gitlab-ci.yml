stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  BACKEND_IMAGE: $CI_REGISTRY_IMAGE/real-estate-backend
  DASHBOARD_IMAGE: $CI_REGISTRY_IMAGE/real-estate-dashboard
  CRAWLERS_IMAGE: $CI_REGISTRY_IMAGE/real-estate-crawlers
  MONGO_USER: $MONGO_USER
  MONGO_PASSWORD: $MONGO_PASSWORD
  MONGO_DATABASE: $MONGO_DATABASE
  SERVER_IP_ADDRESS: $SERVER_IP_ADDRESS

build_backend:
  stage: build
  image: docker:latest
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - cd real-estate-backend
  script:
    - docker build -t $BACKEND_IMAGE:$CI_COMMIT_SHORT_SHA -f ./docker/Dockerfile .
    - docker tag $BACKEND_IMAGE:$CI_COMMIT_SHORT_SHA $BACKEND_IMAGE:latest
    - docker push $BACKEND_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $BACKEND_IMAGE:latest

build_crawlers:
  stage: build
  image: docker:latest
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - cd real-estate-crawlers
  script:
    - docker build -t $CRAWLERS_IMAGE:$CI_COMMIT_SHORT_SHA -f ./docker/Dockerfile .
    - docker tag $CRAWLERS_IMAGE:$CI_COMMIT_SHORT_SHA $CRAWLERS_IMAGE:latest
    - docker push $CRAWLERS_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CRAWLERS_IMAGE:latest

build_dashboard:
  stage: build
  image: docker:latest
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - cd real-estate-dashboard
  script:
    - docker build -t $DASHBOARD_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker tag $DASHBOARD_IMAGE:$CI_COMMIT_SHORT_SHA $DASHBOARD_IMAGE:latest
    - docker push $DASHBOARD_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $DASHBOARD_IMAGE:latest



deploy_backend:
  stage: deploy
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  environment:
    name: production
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh haythem@$BACKEND_HOST "docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY"
    - ssh haythem@$BACKEND_HOST "docker pull $BACKEND_IMAGE:latest"
    - ssh haythem@$BACKEND_HOST "docker pull $DASHBOARD_IMAGE:latest"
    - scp real-estate-backend/compose.prod.yml haythem@"$BACKEND_HOST":/home/haythem/real-estate-backend/
    - scp "$BACKEND_ENV_KEYS" haythem@"$BACKEND_HOST":/home/haythem/real-estate-backend/environments/production.env
    - scp real-estate-backend/bin/* haythem@"$BACKEND_HOST":/home/haythem/real-estate-backend/bin
    - ssh haythem@$BACKEND_HOST "export BACKEND_IMAGE=$BACKEND_IMAGE && export DASHBOARD_IMAGE=$DASHBOARD_IMAGE && docker compose -f /home/haythem/real-estate-backend/compose.prod.yml down"
    - ssh haythem@$BACKEND_HOST "export BACKEND_IMAGE=$BACKEND_IMAGE && export DASHBOARD_IMAGE=$DASHBOARD_IMAGE && docker image prune -f"
    - ssh haythem@$BACKEND_HOST "export BACKEND_IMAGE=$BACKEND_IMAGE && export DASHBOARD_IMAGE=$DASHBOARD_IMAGE && docker compose -f /home/haythem/real-estate-backend/compose.prod.yml up -d"
  

deploy_crawlers:
  stage: deploy
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  environment:
    name: production
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh haythem@"$CRAWLERS_HOST" "docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY"
    - ssh haythem@"$CRAWLERS_HOST" "docker pull $CRAWLERS_IMAGE:latest"
    - scp real-estate-crawlers/compose.prod.yml haythem@"$CRAWLERS_HOST":/home/haythem/real-estate-crawlers/
    - scp "$CRAWLERS_ENV_KEYS" haythem@"$CRAWLERS_HOST":/home/haythem/real-estate-crawlers/environments/production.env
    - scp real-estate-crawlers/entrypoints/redis.conf haythem@"$CRAWLERS_HOST":/home/haythem/real-estate-crawlers/entrypoints
    - ssh haythem@"$CRAWLERS_HOST" "export CRAWLERS_IMAGE=$CRAWLERS_IMAGE && docker compose -f /home/haythem/real-estate-crawlers/compose.prod.yml down"
    - ssh haythem@"$CRAWLERS_HOST" "export CRAWLERS_IMAGE=$CRAWLERS_IMAGE && docker image prune -f"
    - ssh haythem@"$CRAWLERS_HOST" "export CRAWLERS_IMAGE=$CRAWLERS_IMAGE && docker compose -f /home/haythem/real-estate-crawlers/compose.prod.yml up -d"


    
