stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE/real-estate-server
  DASHBOARD_IMAGE: $CI_REGISTRY_IMAGE/real-estate-dashboard

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

build_server:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd real-estate-server
    - docker build -t $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker tag $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA $CONTAINER_IMAGE:latest
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CONTAINER_IMAGE:latest

build_dashboard:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - cd real-estate-dashboard
  script:
    - docker build -t $DASHBOARD_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker tag $DASHBOARD_IMAGE:$CI_COMMIT_SHORT_SHA $DASHBOARD_IMAGE:latest
    - docker push $DASHBOARD_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $DASHBOARD_IMAGE:latest

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  before_script:
    - echo "$KUBE_CONFIG" | base64 -d > $KUBECONFIG
  script:
    - kubectl --kubeconfig=$KUBECONFIG apply -f kubernetes/backend-deployment.yaml
    - kubectl --kubeconfig=$KUBECONFIG apply -f kubernetes/frontend-deployment.yaml
    - kubectl --kubeconfig=$KUBECONFIG apply -f kubernetes/mongo-deployment.yaml
    - kubectl --kubeconfig=$KUBECONFIG apply -f kubernetes/redis-deployment.yaml
  only:
    - main
