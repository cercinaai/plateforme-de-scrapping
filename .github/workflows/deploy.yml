name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  BACKEND_IMAGE: ghcr.io/cercinaai/real-estate-backend
  DASHBOARD_IMAGE: ghcr.io/cercinaai/real-estate-dashboard
  CRAWLERS_IMAGE: ghcr.io/cercinaai/real-estate-crawlers

jobs:
  build_backend:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Build and Push Backend Image
        run: |
          cd real-estate-backend
          docker build -t $BACKEND_IMAGE:$GITHUB_SHA -f ./docker/Dockerfile .
          docker tag $BACKEND_IMAGE:$GITHUB_SHA $BACKEND_IMAGE:latest
          docker push $BACKEND_IMAGE:$GITHUB_SHA
          docker push $BACKEND_IMAGE:latest

  build_crawlers:
    name: Build Crawlers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Build and Push Crawlers Image
        run: |
          cd real-estate-crawlers
          docker build -t $CRAWLERS_IMAGE:$GITHUB_SHA -f ./docker/Dockerfile .
          docker tag $CRAWLERS_IMAGE:$GITHUB_SHA $CRAWLERS_IMAGE:latest
          docker push $CRAWLERS_IMAGE:$GITHUB_SHA
          docker push $CRAWLERS_IMAGE:latest

  build_dashboard:
    name: Build Dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Build and Push Dashboard Image
        run: |
          cd real-estate-dashboard
          docker build -t $DASHBOARD_IMAGE:$GITHUB_SHA .
          docker tag $DASHBOARD_IMAGE:$GITHUB_SHA $DASHBOARD_IMAGE:latest
          docker push $DASHBOARD_IMAGE:$GITHUB_SHA
          docker push $DASHBOARD_IMAGE:latest

  deploy_backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.BACKEND_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Backend
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no haythem@${{ secrets.BACKEND_HOST }} << 'EOF'
            set -e
            export BACKEND_IMAGE=${{ env.BACKEND_IMAGE }}
            export DASHBOARD_IMAGE=${{ env.DASHBOARD_IMAGE }}

            # Login to Docker and pull the latest images
            docker login -u "${{ secrets.CI_REGISTRY_USER }}" -p "${{ secrets.CI_REGISTRY_PASSWORD }}" ghcr.io
            docker pull $BACKEND_IMAGE:latest
            docker pull $DASHBOARD_IMAGE:latest

            # Check if compose.prod.yml exists and differs, then copy only if necessary
            if ! cmp -s real-estate-backend/compose.prod.yml /home/haythem/real-estate-backend/compose.prod.yml; then
              cp real-estate-backend/compose.prod.yml /home/haythem/real-estate-backend/
            fi

            # Restart services
            docker compose -f /home/haythem/real-estate-backend/compose.prod.yml down --remove-orphans
            docker image prune -f
            docker compose -f /home/haythem/real-estate-backend/compose.prod.yml up -d
          EOF
              run: |
                ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no haythem@${{ secrets.BACKEND_HOST }} << 'EOF'
                  set -e
                  export BACKEND_IMAGE=${{ env.BACKEND_IMAGE }}
                  export DASHBOARD_IMAGE=${{ env.DASHBOARD_IMAGE }}

                  # Create missing volumes
                  docker volume inspect frontend_data > /dev/null 2>&1 || docker volume create frontend_data

                  # Login and pull images
                  docker login -u "${{ secrets.CI_REGISTRY_USER }}" -p "${{ secrets.CI_REGISTRY_PASSWORD }}" ghcr.io
                  docker pull $BACKEND_IMAGE:latest
                  docker pull $DASHBOARD_IMAGE:latest

                  # Copy compose.prod.yml only if missing
                  mkdir -p /home/haythem/real-estate-backend
                  cp -u real-estate-backend/compose.prod.yml /home/haythem/real-estate-backend/

                  # Restart services
                  docker compose -f /home/haythem/real-estate-backend/compose.prod.yml down --remove-orphans
                  docker image prune -f
                  docker compose -f /home/haythem/real-estate-backend/compose.prod.yml up -d
                EOF
  


  deploy_crawlers:
    name: Deploy Crawlers
    runs-on: ubuntu-latest
    needs: [build_crawlers]
    steps:
      - name: Deploy Crawlers
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no haythem@${{ secrets.CRAWLERS_HOST }} << 'EOF'
            docker login -u "${{ secrets.CI_REGISTRY_USER }}" -p "${{ secrets.CI_REGISTRY_PASSWORD }}" ghcr.io
            docker pull $CRAWLERS_IMAGE:latest
            scp real-estate-crawlers/compose.prod.yml haythem@$CRAWLERS_HOST:/home/haythem/real-estate-crawlers/
            scp ${{ secrets.CRAWLERS_ENV_KEYS }} haythem@$CRAWLERS_HOST:/home/haythem/real-estate-crawlers/environments/production.env
            docker compose -f /home/haythem/real-estate-crawlers/compose.prod.yml down
            docker image prune -f
            docker compose -f /home/haythem/real-estate-crawlers/compose.prod.yml up -d
          EOF