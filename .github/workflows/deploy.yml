name: Build and Deploy

on:
  push:
    branches: [ main ]

env:
  BACKEND_IMAGE: ghcr.io/cercinaai/real-estate-backend:${{ github.sha }}
  DASHBOARD_IMAGE: ghcr.io/cercinaai/real-estate-dashboard:${{ github.sha }}
  CRAWLERS_IMAGE: ghcr.io/cercinaai/real-estate-crawlers:${{ github.sha }}
  MONGO_USER: ${{ secrets.MONGO_USER }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }}
  SERVER_IP_ADDRESS: ${{ secrets.SERVER_IP_ADDRESS }}

jobs:
  build_backend:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Backend image
        uses: docker/build-push-action@v2
        with:
          context: ./real-estate-backend
          file: ./real-estate-backend/docker/Dockerfile
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE }}
            ghcr.io/cercinaai/real-estate-backend:latest

  build_dashboard:
    name: Build Dashboard
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Dashboard image
        uses: docker/build-push-action@v2
        with:
          context: ./real-estate-dashboard
          push: true
          tags: |
            ${{ env.DASHBOARD_IMAGE }}
            ghcr.io/cercinaai/real-estate-dashboard:latest

  build_crawlers:
    name: Build Crawlers
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Crawlers image
        uses: docker/build-push-action@v2
        with:
          context: ./real-estate-crawlers
          file: ./real-estate-crawlers/docker/Dockerfile
          push: true
          tags: |
            ${{ env.CRAWLERS_IMAGE }}
            ghcr.io/cercinaai/real-estate-crawlers:latest

  deploy_backend:
    name: Deploy Backend
    needs: [build_backend, build_dashboard]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install SSH client
        run: sudo apt-get install -y openssh-client
      - name: Deploy to backend server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
          BACKEND_HOST: ${{ secrets.BACKEND_HOST }}
          BACKEND_ENV_KEYS: ${{ secrets.BACKEND_ENV_KEYS }}
        run: |
          eval $(ssh-agent -s)
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          ssh haythem@$BACKEND_HOST "docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}"
          ssh haythem@$BACKEND_HOST "docker pull ${{ env.BACKEND_IMAGE }}"
          ssh haythem@$BACKEND_HOST "docker pull ${{ env.DASHBOARD_IMAGE }}"
          scp real-estate-backend/compose.prod.yml haythem@$BACKEND_HOST:/home/haythem/real-estate-backend/
          echo "$BACKEND_ENV_KEYS" > production.env
          scp production.env haythem@$BACKEND_HOST:/home/haythem/real-estate-backend/environments/production.env
          scp -r real-estate-backend/bin haythem@$BACKEND_HOST:/home/haythem/real-estate-backend/
          ssh haythem@$BACKEND_HOST "export BACKEND_IMAGE=${{ env.BACKEND_IMAGE }} && export DASHBOARD_IMAGE=${{ env.DASHBOARD_IMAGE }} && docker compose -f /home/haythem/real-estate-backend/compose.prod.yml down"
          ssh haythem@$BACKEND_HOST "export BACKEND_IMAGE=${{ env.BACKEND_IMAGE }} && export DASHBOARD_IMAGE=${{ env.DASHBOARD_IMAGE }} && docker image prune -f"
          ssh haythem@$BACKEND_HOST "export BACKEND_IMAGE=${{ env.BACKEND_IMAGE }} && export DASHBOARD_IMAGE=${{ env.DASHBOARD_IMAGE }} && docker compose -f /home/haythem/real-estate-backend/compose.prod.yml up -d"

  deploy_crawlers:
    name: Deploy Crawlers
    needs: [build_crawlers]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install SSH client
        run: sudo apt-get install -y openssh-client
      - name: Deploy to crawlers server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
          CRAWLERS_HOST: ${{ secrets.CRAWLERS_HOST }}
          CRAWLERS_ENV_KEYS: ${{ secrets.CRAWLERS_ENV_KEYS }}
        run: |
          eval $(ssh-agent -s)
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          ssh haythem@$CRAWLERS_HOST "docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}"
          ssh haythem@$CRAWLERS_HOST "docker pull ${{ env.CRAWLERS_IMAGE }}"
          scp real-estate-crawlers/compose.prod.yml haythem@$CRAWLERS_HOST:/home/haythem/real-estate-crawlers/
          echo "$CRAWLERS_ENV_KEYS" > production.env
          scp production.env haythem@$CRAWLERS_HOST:/home/haythem/real-estate-crawlers/environments/production.env
          scp -r real-estate-crawlers/entrypoints haythem@$CRAWLERS_HOST:/home/haythem/real-estate-crawlers/
          ssh haythem@$CRAWLERS_HOST "export CRAWLERS_IMAGE=${{ env.CRAWLERS_IMAGE }} && docker compose -f /home/haythem/real-estate-crawlers/compose.prod.yml down"
          ssh haythem@$CRAWLERS_HOST "export CRAWLERS_IMAGE=${{ env.CRAWLERS_IMAGE }} && docker image prune -f"
          ssh haythem@$CRAWLERS_HOST "export CRAWLERS_IMAGE=${{ env.CRAWLERS_IMAGE }} && docker compose -f /home/haythem/real-estate-crawlers/compose.prod.yml up -d"