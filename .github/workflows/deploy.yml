name: CI/CD

on:
  push:
    branches:
      - main

env:
  BACKEND_IMAGE: ghcr.io/cercinaai/real-estate-backend
  DASHBOARD_IMAGE: ghcr.io/cercinaai/real-estate-dashboard
  CRAWLERS_IMAGE: ghcr.io/cercinaai/real-estate-crawlers

jobs:
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Backend Image
        run: |
          cd real-estate-backend
          docker build -t $BACKEND_IMAGE:${{ github.sha }} -f ./docker/Dockerfile .
          docker tag $BACKEND_IMAGE:${{ github.sha }} $BACKEND_IMAGE:latest
          docker push $BACKEND_IMAGE:${{ github.sha }}
          docker push $BACKEND_IMAGE:latest

  build-dashboard:
    name: Build Dashboard
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Dashboard Image
        run: |
          cd real-estate-dashboard
          docker build -t $DASHBOARD_IMAGE:${{ github.sha }} .
          docker tag $DASHBOARD_IMAGE:${{ github.sha }} $DASHBOARD_IMAGE:latest
          docker push $DASHBOARD_IMAGE:${{ github.sha }}
          docker push $DASHBOARD_IMAGE:latest

  build-crawlers:
    name: Build Crawlers
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Crawlers Image
        run: |
          cd real-estate-crawlers
          docker build -t $CRAWLERS_IMAGE:${{ github.sha }} -f ./docker/Dockerfile .
          docker tag $CRAWLERS_IMAGE:${{ github.sha }} $CRAWLERS_IMAGE:latest
          docker push $CRAWLERS_IMAGE:${{ github.sha }}
          docker push $CRAWLERS_IMAGE:latest

  deploy_backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: [build-backend,build-dashboard]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
  
      - name: Setup SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.BACKEND_HOST }} >> ~/.ssh/known_hosts
  
      - name: Debug SSH Connection
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no -vvv haythem@${{ secrets.BACKEND_HOST }} echo "SSH connection successful"
  
      - name: Deploy Backend
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no haythem@${{ secrets.BACKEND_HOST }} <<'EOF'
          set -e
      
          export BACKEND_IMAGE=${{ env.BACKEND_IMAGE }}
          export DASHBOARD_IMAGE=${{ env.DASHBOARD_IMAGE }}
      
          # Login to Docker registry
          echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin
      
          # Docker pull
          docker pull $BACKEND_IMAGE:latest
          docker pull $DASHBOARD_IMAGE:latest
      
          # Create directories on the server
          mkdir -p /home/haythem/real-estate-backend/environments
          EOF
      
      - name: Transfer Files
        run: |
          scp -i /tmp/deploy_key -o StrictHostKeyChecking=no real-estate-backend/compose.prod.yml haythem@${{ secrets.BACKEND_HOST }}:/home/haythem/real-estate-backend/
          scp -i /tmp/deploy_key -o StrictHostKeyChecking=no -r real-estate-backend/bin haythem@${{ secrets.BACKEND_HOST }}:/home/haythem/real-estate-backend/


      - name: Restart Backend Services
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no haythem@${{ secrets.BACKEND_HOST }} <<'EOF'
          set -e
  
          export BACKEND_IMAGE=${{ env.BACKEND_IMAGE }}
          export DASHBOARD_IMAGE=${{ env.DASHBOARD_IMAGE }}
  
          # Stop existing containers
          docker compose -f /home/haythem/real-estate-backend/compose.prod.yml down
  
          # Clean up unused images
          docker image prune -f
  
          # Start the updated containers
          docker compose -f /home/haythem/real-estate-backend/compose.prod.yml up -d nginx
          EOF



  deploy_crawlers:
    name: Deploy Crawlers
    runs-on: ubuntu-latest
    needs: build-crawlers
  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
  
      - name: Setup SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.CRAWLERS_HOST }} >> ~/.ssh/known_hosts
  
      - name: Debug SSH Connection
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no -vvv haythem@${{ secrets.CRAWLERS_HOST }} echo "SSH connection successful"
  
      - name: Deploy Crawlers
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no haythem@${{ secrets.CRAWLERS_HOST }} <<'EOF'
          set -e
  
          export CRAWLERS_IMAGE=${{ env.CRAWLERS_IMAGE }}
  
          # Login to Docker registry
          echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin
  
          # Docker pull
          docker pull $CRAWLERS_IMAGE:latest
  
          # Create directories on the server
          mkdir -p /home/haythem/real-estate-crawlers/environments
          EOF
  
      - name: Transfer Files
        run: |
          scp -i /tmp/deploy_key -o StrictHostKeyChecking=no real-estate-crawlers/compose.prod.yml haythem@${{ secrets.CRAWLERS_HOST }}:/home/haythem/real-estate-crawlers/
          scp -i /tmp/deploy_key -o StrictHostKeyChecking=no -r real-estate-crawlers/entrypoints haythem@${{ secrets.CRAWLERS_HOST }}:/home/haythem/real-estate-crawlers/
  
      - name: Restart Crawlers Services
        run: |
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no haythem@${{ secrets.CRAWLERS_HOST }} <<'EOF'
          set -e
  
          export CRAWLERS_IMAGE=${{ env.CRAWLERS_IMAGE }}
  
          # Stop existing containers
          docker compose -f /home/haythem/real-estate-crawlers/compose.prod.yml down
  
          # Clean up unused images
          docker image prune -f
  
          # Start the updated containers
          docker compose -f /home/haythem/real-estate-crawlers/compose.prod.yml up -d
          EOF
